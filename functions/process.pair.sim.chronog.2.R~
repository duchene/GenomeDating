# Process a pair of simulated chronograms. Take pair of chronogs in a list. Simulate data from them. Re-estimate phylograms. Output gene tree list.

require(phangorn)
require(NELSI)

process.gd.sim <- function(treepair){

	       # Simulate phylograms
	       
	       tr1pm1 <- list()
	       tr2pm1 <- list()
	       tr1pm2 <- list()
	       tr2pm2 <- list()
	       tr1pm3 <- list()
	       tr2pm3 <- list()
	       for(i in 1:100){
			tr1pm1[[i]] <- treepair[[1]]
			tr1pm1[[i]]$edge.length <- rlnorm(length($edge.length), meanlog = log(0.01), sdlog = 0.01)
			tr2pm1[[i]] <- treepair[[2]]
			tr2pm1[[i]]$edge.length <- rlnorm(length($edge.length), meanlog = log(0.01), sdlog = 0.01)
			tr1pm2[[i]] <- treepair[[1]]
			tr1pm2[[i]]$edge.length <- rlnorm(length($edge.length), meanlog = log(0.015), sdlog = 0.01)
			tr2pm2[[i]] <- treepair[[2]]
			tr2pm2[[i]]$edge.length <- rlnorm(length($edge.length), meanlog = log(0.015), sdlog = 0.01)
			tr1pm3[[i]] <- treepair[[1]]
			tr1pm3[[i]]$edge.length <- rlnorm(length($edge.length), meanlog = log(0.02), sdlog = 0.01)
			tr2pm3[[i]] <- treepair[[2]]
			tr2pm3[[i]]$edge.length <- rlnorm(length($edge.length), meanlog = log(0.02), sdlog = 0.01)
	       }
	       
	       # Simulate alignment data from phylograms, and estimate trees.
	       
	       al1pm1 <- lapply(tr1pm1, simSeq)
	       tr1pm1est <- lapply(al1pm1, function(x) optim.pml(pml(NJ(dist.dna(as.DNAbin(x))), x), optNni = T)$tree)
	       al2pm1 <- lapply(tr2pm1, simSeq)
	       tr2pm1est <- lapply(al2pm1, function(x) optim.pml(pml(NJ(dist.dna(as.DNAbin(x))), x), optNni = T)$tree)
	       al1pm2 <- lapply(tr1pm2, simSeq)
	       tr1pm2est <- lapply(al1pm2, function(x) optim.pml(pml(NJ(dist.dna(as.DNAbin(x))), x), optNni = T)$tree)
   	       al2pm2 <- lapply(tr2pm2, simSeq)
	       tr2pm2est <- lapply(al2pm2, function(x) optim.pml(pml(NJ(dist.dna(as.DNAbin(x))), x), optNni = T)$tree)
	       al1pm3 <- lapply(tr1pm3, simSeq)
	       tr1pm3est <- lapply(al1pm3, function(x) optim.pml(pml(NJ(dist.dna(as.DNAbin(x))), x), optNni = T)$tree)
	       al2pm3 <- lapply(tr2pm3, simSeq)
	       tr2pm3est <- lapply(al2pm3, function(x) optim.pml(pml(NJ(dist.dna(as.DNAbin(x))), x), optNni = T)$tree)
	       
	       sim.phylogs <- c(tr1pm1, tr2pm1, tr1pm2, tr2pm2, tr1pm3, tr2pm3)
	       names(sim.phylogs) <- c(rep("tr1pm1", length(tr1pm1)), rep("tr2pm1", length(tr2pm1)), rep("tr1pm2", length(tr1pm2)), rep("tr2pm2", length(tr2pm2)), rep("tr1pm3", length(tr1pm3)), rep("tr2pm3", length(tr2pm3)))

	       sim.genes <- c(al1pm1, al2pm1, al1pm2, al2pm2, al1pm3, al2pm3)
	       names(sim.genes) <- c(rep("al1pm1", length(al1pm1)), rep("al2pm1", length(al2pm1)), rep("al1pm2", length(al1pm2)), rep("al2pm2", length(al2pm2)), rep("al1pm3", length(al1pm3)), rep("al2pm3", length(al2pm3)))

	       est.phylogs <- c(tr1pm1est, tr2pm1est, tr1pm2est, tr2pm2est, tr1pm3est, tr2pm3est)
	       names(est.phylogs) <- c(rep("tr1pm1est", length(tr1pm1est)), rep("tr2pm1est", length(tr2pm1est)), rep("tr1pm2est", length(tr1pm2est)), rep("tr2pm2est", length(tr2pm2est)), rep("tr1pm3est", length(tr1pm3est)), rep("tr2pm3est", length(tr2pm3est)))

	       reslist <- list(sim.phylogs = sim.phylogs, sim.genes = sim.genes, est.phylogs = est.phylogs)

	       return(reslist)
}